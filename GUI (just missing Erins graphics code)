/*
 * MusicGUI.java
 *
 * Created on Feb 6, 2013, 1:46:56 PM
 */
/**
 *
 * @author fayerichards
 */
import org.jfugue.*; 
import javax.swing.JOptionPane;
import java.awt.Component;

public class MusicGUI extends javax.swing.JFrame {

    private Component frame;
    /** Creates new form MusicGUI */
    public MusicGUI() {
        initComponents();
        myInitComponents();
    }
    static String[] noteArray = new String[16]; //initializes the noteArray (we are allowing a maximum of 50 notes)
    
    private static int arrayCounter = 0; //will keep track of where to input the notes into the array (which will happen sequentially in the order the user enters them
    
    private void myInitComponents() {
        instrumentComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"--Choose one--", "Piano", "Violin", "Trumpet"}));
        for (int i = 0; i < noteArray.length; i++) {
            noteArray[i]="";
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        instrumentComboBox = new javax.swing.JComboBox();
        wholeNoteRadioButton = new javax.swing.JRadioButton();
        halfNoteRadioButton = new javax.swing.JRadioButton();
        quarterNoteRadioButton = new javax.swing.JRadioButton();
        quarterRestRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        D6RadioButton = new javax.swing.JRadioButton();
        B5RadioButton = new javax.swing.JRadioButton();
        F6RadioButton = new javax.swing.JRadioButton();
        F5RadioButton = new javax.swing.JRadioButton();
        G5RadioButton = new javax.swing.JRadioButton();
        E5RadioButton = new javax.swing.JRadioButton();
        E6RadioButton = new javax.swing.JRadioButton();
        A5RadioButton = new javax.swing.JRadioButton();
        C6RadioButton = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        noteEnterButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        playMusicButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 153));

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("4) Select your instrument:");

        instrumentComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        wholeNoteRadioButton.setText("Whole note");

        halfNoteRadioButton.setText("Half note");

        quarterNoteRadioButton.setText("Quarter note");

        quarterRestRadioButton.setText("Quarter rest");
        quarterRestRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quarterRestRadioButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("1) Pick a note or rest:");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicappimages/images/WHOLE.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicappimages/images/HALF.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicappimages/images/QUARTER.png"))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 255));
        jLabel8.setText("2) Place your note on a bar/octave:");

        D6RadioButton.setText("D");

        B5RadioButton.setText("B");

        F6RadioButton.setText("F");

        F5RadioButton.setText("F");

        G5RadioButton.setText("G");

        E5RadioButton.setText("E");

        E6RadioButton.setText("E");

        A5RadioButton.setText("A");

        C6RadioButton.setText("C");
        C6RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C6RadioButtonActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicappimages/images/quarterrest.png"))); // NOI18N

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicappimages/images/musicbar.png"))); // NOI18N
        jLabel7.setText("jLabel7");

        noteEnterButton.setText("Enter note");
        noteEnterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                noteEnterButtonMouseReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel9.setText("Your music so far:");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 255));
        jLabel10.setText("3)");

        playMusicButton.setText("Play Music");
        playMusicButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                playMusicButtonMouseReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 255));
        jLabel11.setText("5)");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(wholeNoteRadioButton)
                        .add(61, 61, 61)
                        .add(halfNoteRadioButton))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(41, 41, 41)
                        .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(97, 97, 97)
                        .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(59, 59, 59)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(29, 29, 29)
                        .add(jLabel5)
                        .add(124, 124, 124)
                        .add(jLabel6))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(quarterNoteRadioButton)
                        .add(58, 58, 58)
                        .add(quarterRestRadioButton)))
                .add(509, 509, 509))
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2)
                .addContainerGap(991, Short.MAX_VALUE))
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel8)
                .add(299, 299, 299)
                .add(jLabel10)
                .addContainerGap(582, Short.MAX_VALUE))
            .add(jPanel1Layout.createSequentialGroup()
                .add(40, 40, 40)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(F6RadioButton)
                    .add(B5RadioButton)
                    .add(G5RadioButton)
                    .add(D6RadioButton)
                    .add(E5RadioButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 319, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(E6RadioButton)
                        .add(134, 134, 134)
                        .add(noteEnterButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(C6RadioButton)
                    .add(A5RadioButton)
                    .add(F5RadioButton))
                .addContainerGap(445, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(752, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(instrumentComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 149, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel11)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(playMusicButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 152, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(228, 228, 228))
            .add(jPanel1Layout.createSequentialGroup()
                .add(12, 12, 12)
                .add(jLabel9)
                .addContainerGap(987, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(17, 17, 17)
                .add(jLabel2)
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(wholeNoteRadioButton)
                    .add(halfNoteRadioButton)
                    .add(quarterNoteRadioButton)
                    .add(quarterRestRadioButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6)
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(35, 35, 35)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(jLabel10))
                .add(25, 25, 25)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(15, 15, 15)
                        .add(F6RadioButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(D6RadioButton)
                        .add(18, 18, 18)
                        .add(B5RadioButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(G5RadioButton)
                        .add(18, 18, 18)
                        .add(E5RadioButton))
                    .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 206, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, noteEnterButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                                .add(34, 34, 34)
                                .add(E6RadioButton)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(C6RadioButton)
                        .add(18, 18, 18)
                        .add(A5RadioButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(F5RadioButton)))
                .add(18, 18, 18)
                .add(jLabel9)
                .add(27, 27, 27)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(instrumentComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(31, 31, 31)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel11)
                    .add(playMusicButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(335, 335, 335))
        );

        jTabbedPane1.addTab("Music Player", jPanel1);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 1187, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(244, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                             
        System.exit(0);
    }                                            

    private void quarterRestRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        // TODO add your handling code here:
    }                                                      

    private void C6RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void noteEnterButtonMouseReleased(java.awt.event.MouseEvent evt) {                                              
        String noteType="blank type";
        String noteLetter="blank letter";
        
        //error handling: you can't select more than one type of note at a time
        if(wholeNoteRadioButton.isSelected() && (halfNoteRadioButton.isSelected() || quarterNoteRadioButton.isSelected() || quarterRestRadioButton.isSelected())){
            JOptionPane.showMessageDialog(frame, "You cannot select more than one type of note at a time", "Error", JOptionPane.ERROR_MESSAGE);
        }else if(halfNoteRadioButton.isSelected() && (wholeNoteRadioButton.isSelected() || quarterNoteRadioButton.isSelected() || quarterRestRadioButton.isSelected())){
            JOptionPane.showMessageDialog(frame, "You cannot select more than one type of note at a time", "Error", JOptionPane.ERROR_MESSAGE);
        }else if(quarterNoteRadioButton.isSelected() && (wholeNoteRadioButton.isSelected() || halfNoteRadioButton.isSelected() || quarterRestRadioButton.isSelected())){
            JOptionPane.showMessageDialog(frame, "You cannot select more than one type of note at a time", "Error", JOptionPane.ERROR_MESSAGE);
        }else if(quarterRestRadioButton.isSelected() && (wholeNoteRadioButton.isSelected() || quarterNoteRadioButton.isSelected() || halfNoteRadioButton.isSelected())){
            JOptionPane.showMessageDialog(frame, "You cannot select more than one type of note at a time", "Error", JOptionPane.ERROR_MESSAGE);
        }else if(arrayCounter==16){ //you cannot enter more than 16 notes into this program
            JOptionPane.showMessageDialog(frame, "You cannot enter more than 16 notes, sorry. Click Play to play out what you have written.", "Error", JOptionPane.ERROR_MESSAGE);
        } 
        else{ //else continue with method
        
            if(wholeNoteRadioButton.isSelected()){
                noteType = "whole";
                wholeNoteRadioButton.setSelected(false); //clears the radio button to show the user that the note was entered successfully
            }
            else if(halfNoteRadioButton.isSelected()){
                noteType = "half";
                halfNoteRadioButton.setSelected(false);
            }
            else if(quarterNoteRadioButton.isSelected()){
                noteType = "quarter";
                quarterNoteRadioButton.setSelected(false);
            }
            else if(quarterRestRadioButton.isSelected()){
                noteType = "rest";
                quarterRestRadioButton.setSelected(false);
            }
            else{
                JOptionPane.showMessageDialog(frame, "Please select a note type (step 1)", "Error", JOptionPane.ERROR_MESSAGE);
            } //if no radio button for note type has been selected, an error message will show
        
            if(!noteType.equals("blank type")){
                //error handling again: you can't select more than one bar/octave at a time
                if(F6RadioButton.isSelected() && (E6RadioButton.isSelected() || D6RadioButton.isSelected() || C6RadioButton.isSelected() || B5RadioButton.isSelected() || A5RadioButton.isSelected() || G5RadioButton.isSelected() || F5RadioButton.isSelected() || E5RadioButton.isSelected())){
                    JOptionPane.showMessageDialog(frame, "You cannot select more than one bar/octave at a time", "Error", JOptionPane.ERROR_MESSAGE);
                }else if(E6RadioButton.isSelected() && (F6RadioButton.isSelected() || D6RadioButton.isSelected() || C6RadioButton.isSelected() || B5RadioButton.isSelected() || A5RadioButton.isSelected() || G5RadioButton.isSelected() || F5RadioButton.isSelected() || E5RadioButton.isSelected())){
                    JOptionPane.showMessageDialog(frame, "You cannot select more than one bar/octave at a time", "Error", JOptionPane.ERROR_MESSAGE);
                }else if(D6RadioButton.isSelected() && (F6RadioButton.isSelected() || E6RadioButton.isSelected() || C6RadioButton.isSelected() || B5RadioButton.isSelected() || A5RadioButton.isSelected() || G5RadioButton.isSelected() || F5RadioButton.isSelected() || E5RadioButton.isSelected())){
                    JOptionPane.showMessageDialog(frame, "You cannot select more than one bar/octave at a time", "Error", JOptionPane.ERROR_MESSAGE);
                }else if(C6RadioButton.isSelected() && (F6RadioButton.isSelected() || D6RadioButton.isSelected() || E6RadioButton.isSelected() || B5RadioButton.isSelected() || A5RadioButton.isSelected() || G5RadioButton.isSelected() || F5RadioButton.isSelected() || E5RadioButton.isSelected())){
                    JOptionPane.showMessageDialog(frame, "You cannot select more than one bar/octave at a time", "Error", JOptionPane.ERROR_MESSAGE);
                }else if(B5RadioButton.isSelected() && (F6RadioButton.isSelected() || D6RadioButton.isSelected() || C6RadioButton.isSelected() || E6RadioButton.isSelected() || A5RadioButton.isSelected() || G5RadioButton.isSelected() || F5RadioButton.isSelected() || E5RadioButton.isSelected())){
                    JOptionPane.showMessageDialog(frame, "You cannot select more than one bar/octave at a time", "Error", JOptionPane.ERROR_MESSAGE);
                }else if(A5RadioButton.isSelected() && (F6RadioButton.isSelected() || D6RadioButton.isSelected() || C6RadioButton.isSelected() || B5RadioButton.isSelected() || E6RadioButton.isSelected() || G5RadioButton.isSelected() || F5RadioButton.isSelected() || E5RadioButton.isSelected())){
                    JOptionPane.showMessageDialog(frame, "You cannot select more than one bar/octave at a time", "Error", JOptionPane.ERROR_MESSAGE);
                }else if(G5RadioButton.isSelected() && (F6RadioButton.isSelected() || D6RadioButton.isSelected() || C6RadioButton.isSelected() || B5RadioButton.isSelected() || A5RadioButton.isSelected() || E6RadioButton.isSelected() || F5RadioButton.isSelected() || E5RadioButton.isSelected())){
                    JOptionPane.showMessageDialog(frame, "You cannot select more than one bar/octave at a time", "Error", JOptionPane.ERROR_MESSAGE);
                }else if(F5RadioButton.isSelected() && (F6RadioButton.isSelected() || D6RadioButton.isSelected() || C6RadioButton.isSelected() || B5RadioButton.isSelected() || A5RadioButton.isSelected() || G5RadioButton.isSelected() || E6RadioButton.isSelected() || E5RadioButton.isSelected())){
                    JOptionPane.showMessageDialog(frame, "You cannot select more than one bar/octave at a time", "Error", JOptionPane.ERROR_MESSAGE);
                }else if(E5RadioButton.isSelected() && (F6RadioButton.isSelected() || D6RadioButton.isSelected() || C6RadioButton.isSelected() || B5RadioButton.isSelected() || A5RadioButton.isSelected() || G5RadioButton.isSelected() || F5RadioButton.isSelected() || E6RadioButton.isSelected())){
                    JOptionPane.showMessageDialog(frame, "You cannot select more than one bar/octave at a time", "Error", JOptionPane.ERROR_MESSAGE);
                }
                else{ //else continue with method as long as noteType has been changed (the user didn't leave noteType blank)

                    if(F6RadioButton.isSelected()){
                        noteLetter = "F6";
                        F6RadioButton.setSelected(false);
                        finalNoteMethod(noteType, noteLetter);
                        displayNoteMethod(noteType, noteLetter);
                    }
                    else if(E6RadioButton.isSelected()){
                        noteLetter = "E6";
                        E6RadioButton.setSelected(false);
                        finalNoteMethod(noteType, noteLetter);
                        displayNoteMethod(noteType, noteLetter);
                    }
                    else if(D6RadioButton.isSelected()){
                        noteLetter = "D6";
                        D6RadioButton.setSelected(false);
                        finalNoteMethod(noteType, noteLetter);
                        displayNoteMethod(noteType, noteLetter);
                    }
                    else if(C6RadioButton.isSelected()){
                        noteLetter = "C6";
                        C6RadioButton.setSelected(false);
                        finalNoteMethod(noteType, noteLetter);
                        displayNoteMethod(noteType, noteLetter);
                    }
                    else if(B5RadioButton.isSelected()){
                        noteLetter = "B5";
                        B5RadioButton.setSelected(false);
                        finalNoteMethod(noteType, noteLetter);
                        displayNoteMethod(noteType, noteLetter);
                    }
                    else if(A5RadioButton.isSelected()){
                        noteLetter = "A5";
                        A5RadioButton.setSelected(false);
                        finalNoteMethod(noteType, noteLetter);
                        displayNoteMethod(noteType, noteLetter);
                    }
                    else if(G5RadioButton.isSelected()){
                        noteLetter = "G5";
                        G5RadioButton.setSelected(false);
                        finalNoteMethod(noteType, noteLetter);
                        displayNoteMethod(noteType, noteLetter);
                    }
                    else if(F5RadioButton.isSelected()){
                        noteLetter = "F5";
                        F5RadioButton.setSelected(false);
                        finalNoteMethod(noteType, noteLetter);
                        displayNoteMethod(noteType, noteLetter);
                    }
                    else if(E5RadioButton.isSelected()){
                        noteLetter = "E5";
                        E5RadioButton.setSelected(false);
                        finalNoteMethod(noteType, noteLetter);
                        displayNoteMethod(noteType, noteLetter);
                    }
                    else{
                        JOptionPane.showMessageDialog(frame, "Please select a bar/octave for your note (step 2)", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    //so far this method has takes in user input for the note they want to enter, and sets them to variables: noteDuration and noteLetter
                }
            }
        }
    }                                             

    
    String instrument = "blank instrument"; //declares instrument variable outside 
    //because there is only 1 instrument in the program (whereas we will have many different notes). The user can 
    //change the instrument over the course of the program so when it comes to playing out the music, it uses the 
    //instrument that was last selected by the user (so the instrument is only checked once the play music button is clicked)
    
    private void playMusicButtonMouseReleased(java.awt.event.MouseEvent evt) {                                              
        String instr = (String)instrumentComboBox.getSelectedItem();
        if(instr.equals("Piano")){
            instrument = "I0";
        }
        else if(instr.equals("Violin")){
            instrument = "I40";
        }
        else if(instr.equals("Trumpet")){
            instrument = "I56";
        }
        else{
            JOptionPane.showMessageDialog(frame, "Please select an instrument (step 4)", "Error", JOptionPane.ERROR_MESSAGE);
        }
        playMusicMethod(instrument, noteArray);
        
    }                                             

    public static void finalNoteMethod(String noteType, String noteLetter){
        //creates the code for the note that can be used by JFugue
        String duration = "";
        String letter = "";
        if(noteType.equals("whole")){
            duration = "w";
            letter = noteLetter;
        }
        else if(noteType.equals("half")){
            duration = "h";
            letter = noteLetter;
        }
        else if(noteType.equals("quarter")){
            duration = "q";
            letter = noteLetter;
        }
        else if(noteType.equals("rest")){
            duration = "q";
            letter = "R";
        }
        String finalNote = letter+duration; //will look like E5q for example
        
            addNoteToArrayMethod(finalNote); //sends the note's code to be added to the array, by sending to addNoteToArrayMethod
    }
    
    public static void addNoteToArrayMethod(String finalNote){
            noteArray[arrayCounter]=finalNote;
            arrayCounter++;
    }
    
    public static void displayNoteMethod(String noteType, String noteLetter){
        //Erin's stuff
    }
    
    public static void playMusicMethod(String instrument, String[] noteArray){
        
        Player player = new Player(); 
        Pattern pattern = new Pattern("C D E F G A B");
        //take out the null values in the array before using
        int index=noteArray.length; //this is an index for when the first occurance of a blank element in the array appears
        for (int i = 0; i < noteArray.length; i++) {
            if(noteArray[i].equals("")){
                index=i;
            }
            else{
                index=noteArray.length;
            }
        }
        String notes = "";
        for (int i = 0; i < index; i++) {
            notes += noteArray[i] + " ";
        }
        player.play(instrument + " " + notes);
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MusicGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MusicGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MusicGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MusicGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MusicGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JRadioButton A5RadioButton;
    private javax.swing.JRadioButton B5RadioButton;
    private javax.swing.JRadioButton C6RadioButton;
    private javax.swing.JRadioButton D6RadioButton;
    private javax.swing.JRadioButton E5RadioButton;
    private javax.swing.JRadioButton E6RadioButton;
    private javax.swing.JRadioButton F5RadioButton;
    private javax.swing.JRadioButton F6RadioButton;
    private javax.swing.JRadioButton G5RadioButton;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JRadioButton halfNoteRadioButton;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JComboBox instrumentComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton noteEnterButton;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JButton playMusicButton;
    private javax.swing.JRadioButton quarterNoteRadioButton;
    private javax.swing.JRadioButton quarterRestRadioButton;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JRadioButton wholeNoteRadioButton;
    // End of variables declaration                   
}
